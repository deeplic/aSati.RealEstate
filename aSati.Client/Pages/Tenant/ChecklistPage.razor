@page "/checklist/{LeaseId:guid}"
@inject HttpClient Http
@inject ISnackbar Snackbar
@using MudBlazor

<PageTitle>Checklist</PageTitle>

<h3>Checklist for Lease</h3>

@if (items == null)
{
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
}
else if (!items.Any())
{
    <MudAlert Severity="Severity.Info">No checklist items found.</MudAlert>
}
else
{
    <MudPaper Class="p-4">
        @foreach (var item in items)
        {
            <MudCard Class="mb-4 p-4">
                <MudText Typo="Typo.h6">@item.Name</MudText>
                <MudText Typo="Typo.caption" Color="Color.Secondary">Expected: @item.ExpectedState</MudText>

                <MudTextField @bind-Value="item.ActualState" Label="Actual State" Variant="Variant.Filled" />
                <MudTextField @bind-Value="item.Comment" Label="Comment" Variant="Variant.Filled" Lines="3" />
                <MudTextField @bind-Value="item.MediaUrl" Label="Media URL (placeholder)" Variant="Variant.Filled" />
            </MudCard>
        }

        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SubmitChecklist">Submit Checklist</MudButton>
    </MudPaper>
}

@code {
    [Parameter] public Guid LeaseId { get; set; }

    private List<ChecklistItemDto>? items;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            items = await Http.GetFromJsonAsync<List<ChecklistItemDto>>($"api/checklist/{LeaseId}/checklist");
        }
        catch (Exception ex)
        {
            Snackbar.Add("Failed to load checklist: " + ex.Message, Severity.Error);
        }
    }

    private async Task SubmitChecklist()
    {
        try
        {
            var response = await Http.PostAsJsonAsync($"api/checklist/submit?leaseId={LeaseId}", items);
            if (response.IsSuccessStatusCode)
                Snackbar.Add("Checklist submitted successfully.", Severity.Success);
            else
                Snackbar.Add("Error submitting checklist.", Severity.Error);
        }
        catch (Exception ex)
        {
            Snackbar.Add("Submission failed: " + ex.Message, Severity.Error);
        }
    }
}